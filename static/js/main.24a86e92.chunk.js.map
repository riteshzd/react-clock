{"version":3,"sources":["App.module.css","Components/Clock/DigitalClock.module.css","Components/Clock/DigitalClock.jsx","Components/Clock/Analog.jsx","Components/TimeZoneSelect/TimeZoneSelect.jsx","App.js","index.js"],"names":["module","exports","DigitalClock","props","offset","require","tz","Timezone","utcOffset","d","Date","utc","getTime","getTimezoneOffset","time","toLocaleTimeString","useState","setCurrentTime","setInterval","className","styles","Analog","state","options","useCustomTime","width","border","borderColor","baseColor","centerColor","handColors","second","minute","hour","hours","minutes","seconds","updateClock","bind","console","log","this","newTime","toLocaleString","timeZone","newDate","setState","getSeconds","getMinutes","getHours","React","Component","TimeZoneSelect","selectedTZ","selectionHandler","e","value","handleTZSelect","timeZoneList","fetchedTZ","names","map","label","onChange","placeholder","App","darkTheme","analogClock","currentTime","themeHandler","clockHandler","timezone","moment","nd","containerDark","containerLight","title","body","clock","timezoneSelect","selectionPanel","modeSelection","checked","uncheckedIcon","checkedIcon","credits","href","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.24a86e92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerLight\":\"App_containerLight__nhmY9\",\"containerDark\":\"App_containerDark__1-VYS\",\"title\":\"App_title__mz-Ky\",\"body\":\"App_body__XS0z4\",\"clock\":\"App_clock__3PWi8\",\"timezoneSelect\":\"App_timezoneSelect__2RoCs\",\"selectionPanel\":\"App_selectionPanel__3LbGs\",\"modeSelection\":\"App_modeSelection__1DCIv\",\"credits\":\"App_credits__3eIYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DigitalClock\":\"DigitalClock_DigitalClock__3ioRD\"};","import React, { useState } from 'react'\r\nimport styles from './DigitalClock.module.css'\r\n\r\n\r\nconst DigitalClock = (props)=>{\r\n    var moment = require('moment-timezone')\r\n    var offset = ((moment.tz(props.Timezone).utcOffset())/60.0) \r\n    var d = new Date()\r\n    var utc = d.getTime()+((d.getTimezoneOffset())*60000)\r\n    var nd = new Date(utc+(3600000*offset))\r\n    var time = nd.toLocaleTimeString()\r\n    const [currentTime, setCurrentTime] = useState(time)\r\n    const updateTime=()=>{\r\n        var moment = require('moment-timezone')\r\n        var offset = ((moment.tz(props.Timezone).utcOffset())/60.0) \r\n        var d = new Date()\r\n        var utc = d.getTime()+((d.getTimezoneOffset())*60000)\r\n        var nd = new Date(utc+(3600000*offset))\r\n        var time = nd.toLocaleTimeString()\r\n        setCurrentTime(time)\r\n    }\r\n    setInterval(updateTime,1000)\r\n    return(\r\n        <div className={styles.DigitalClock}>\r\n            <h3>{time}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DigitalClock;","import React from 'react'\r\nimport AnalogClock from 'analog-clock-react'\r\n\r\nclass Analog extends React.Component{ \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options:{\r\n                useCustomTime: true,\r\n                width:\"200px\",\r\n                border: true,\r\n                borderColor: \"#2e2e2e\",\r\n                baseColor: \"#17a2b8\",\r\n                centerColor: \"#459cff\",\r\n                handColors: {\r\n                second: \"#d81c7a\",\r\n                minute: \"#fff\",\r\n                hour: \"#fff\"\r\n                },\r\n                hours:0,\r\n                minutes:0,\r\n                seconds:0\r\n            }\r\n        };\r\n        this.updateClock = this.updateClock.bind(this)\r\n    }\r\n\r\n    async updateClock(){\r\n        console.log(\"Analog clock will get updated for\",this.props.Timezone);\r\n        let newTime = new Date().toLocaleString(\"en-US\",{timeZone:this.props.Timezone});\r\n        let newDate = new Date(newTime)\r\n        //console.log(newDate.getHours()+\":\"+newDate.getMinutes()+\":\"+newDate.getSeconds());\r\n        await this.setState({\r\n            'options': {\r\n                ...this.state.options,\r\n                useCustomTime:true,\r\n                seconds: newDate.getSeconds(),\r\n                minutes: newDate.getMinutes(),\r\n                hours: newDate.getHours()\r\n              }\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        setInterval(this.updateClock,1000)\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.options.hours+\":\"+this.state.options.minutes+\":\"+this.state.options.seconds);\r\n        return(\r\n            <AnalogClock {...this.state.options}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Analog;","import React from 'react'\r\nimport Select from 'react-select'\r\n\r\nclass TimeZoneSelect extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            selectedTZ:\" \"\r\n        }\r\n        this.selectionHandler = this.selectionHandler.bind(this)\r\n    }\r\n\r\n    async selectionHandler(e){\r\n        await this.setState({selectedTZ:e.value})\r\n        this.props.handleTZSelect(this.state.selectedTZ);\r\n    }\r\n\r\n    render(){\r\n        var moment = require('moment-timezone')\r\n        let fetchedTZ = moment.tz.names()\r\n        let timeZoneList = []\r\n        let singleTZ = {} \r\n        timeZoneList = fetchedTZ.map(function(tz){\r\n            singleTZ = {value:tz, label:tz}\r\n            return singleTZ;\r\n        })\r\n        return(\r\n            <div>\r\n                <Select\r\n                    options={timeZoneList}\r\n                    onChange={this.selectionHandler}\r\n                    placeholder=\"Select a region\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimeZoneSelect;","import React from 'react'\r\nimport styles from './App.module.css'\r\nimport DigitalClock from './Components/Clock/DigitalClock'\r\nimport Analog from './Components/Clock/Analog'\r\nimport TimeZoneSelect from './Components/TimeZoneSelect/TimeZoneSelect'\r\nimport Switch from 'react-switch' \r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            darkTheme:false,\r\n            analogClock:false,\r\n            selectedTZ:\"Asia/Kolkata\",\r\n            currentTime:\" \"\r\n        }\r\n        this.themeHandler = this.themeHandler.bind(this)\r\n        this.clockHandler =this.clockHandler.bind(this)\r\n        this.handleTZSelect = this.handleTZSelect.bind(this)\r\n    }\r\n\r\n    themeHandler(e){\r\n        this.setState({darkTheme:e});\r\n        console.log(\"Theme Changed..Bingo..!!\")\r\n    }\r\n\r\n    clockHandler(e){\r\n        this.setState({analogClock:e})\r\n        console.log(\"Clock has been changed..!!\")\r\n    }\r\n\r\n    async handleTZSelect(timezone){\r\n        await this.setState({selectedTZ:timezone})\r\n        var moment = require('moment-timezone')\r\n        var offset = ((moment.tz(this.state.selectedTZ).utcOffset())/60.0) \r\n        var d = new Date()\r\n        var utc = d.getTime()+((d.getTimezoneOffset())*60000)\r\n        var nd = new Date(utc+(3600000*offset))\r\n        await this.setState({currentTime:nd.toLocaleTimeString()})\r\n        console.log(this.state.selectedTZ, this.state.currentTime)    \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={this.state.darkTheme? styles.containerDark : styles.containerLight}>\r\n                <div className={styles.title}>\r\n                    <h1>\r\n                        Cloked\r\n                    </h1>\r\n                </div>\r\n                <div className={styles.body}>\r\n\r\n                    <div className={styles.clock}>\r\n                        {this.state.analogClock? <Analog Timezone={this.state.selectedTZ}/> : <DigitalClock Timezone={this.state.selectedTZ}/>}         \r\n                    </div>\r\n\r\n                    <div className={styles.timezoneSelect}>\r\n                    <TimeZoneSelect handleTZSelect={this.handleTZSelect}/>\r\n                    <h4>Give Continent followed by name of City</h4>\r\n                    </div>\r\n\r\n                    <div className={styles.selectionPanel}>\r\n                        <div className={styles.modeSelection}>\r\n                            <h3>Dark Mode</h3>\r\n                            <Switch\r\n                                onChange={this.themeHandler} \r\n                                checked={this.state.darkTheme} \r\n                                uncheckedIcon={false} \r\n                                checkedIcon={false}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className={styles.modeSelection}>\r\n                            <h3>Analog Mode</h3>\r\n                            <Switch\r\n                                onChange={this.clockHandler} \r\n                                checked={this.state.analogClock} \r\n                                uncheckedIcon={false} \r\n                                checkedIcon={false}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className={styles.credits}>\r\n                    <h5><a href=\"https://github.com/riteshzd/react-clock\">designed by riteshzd</a></h5>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDom.render(<App />,document.getElementById('root'));"],"sourceRoot":""}